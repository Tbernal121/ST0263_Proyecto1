syntax = "proto3";
  
  service NameNodeService {
    rpc LeaderHeartbeat(NameNodeID) returns (LeaderInfo) {}
    rpc ListFiles(Empty) returns (FileList) {}
    rpc CreateFile(FileInfo) returns (DataNodeIDS) {}
    rpc GetBlockLocations(FileName) returns (BlockLocations) {}
    rpc UpdateFileBlocks(FileInfo) returns (Status) {}
    rpc RelocateBlocks(BlockRelocation) returns (Status) {} // redifine the parameter and the return
  }
  
  service DataNodeService {
    rpc SendHeartbeat(DataNodeID) returns (Status) {}
    rpc InitialContact(DataNodeID) returns (Status) {} //RegisterDataNode possible name
    rpc StoreBlock(BlockData) returns (Status) {}
    rpc DeleteBlock(BlockId) returns (Status) {}
    rpc SendBlock(BlockId) returns (BlockData) {}
  }

message Empty {}

message FileList {
  repeated string files = 1;
}

message FileName {
  string name = 1;
}

message FileData {
  string name = 1;
  bytes data = 2;
}

message FileInfo {
  string name = 1;
  repeated string blocks_id = 2;
}

message PartitionedFile {
  string name = 1;
  repeated bytes partitions = 2;
}

message Status {
  bool success = 1;
  string message = 2;
}

message BlockAllocation {
  string name = 1;
  repeated string blockIds = 2;
}

message BlockLocation {
  string block_id = 1;
  string dataNode_id = 2;
}

message BlockLocations {
  repeated BlockLocation locations = 1;  // BlockLocation list
}

message DataNodeInfo {
  string id = 1;
  string address = 2;
}

message DataNodeStatus {
  string id = 1;
  bool isAlive = 2;
}

message BlockRelocation {
  string blockId = 1;
  string sourceDataNodeId = 2;
  string targetDataNodeId = 3;
}

message BlockId {
  string id = 1;
}

message DataNodeID {
  string id = 1;
}

message NameNodeID {
  string id = 1;
}

message DataNodeIDS {
  repeated string id_list = 1;
}

message BlockData {
  string id = 1;
  string data = 2;
}

message NameNodeIDS {
  repeated string id_list = 1;
}

message FileBlock {
  repeated string datanode_id = 1;
  repeated string blocks = 2;
}

message DictionaryEntry {
  string key = 1;
  FileBlock value = 2;
}

message Dictionary {
  repeated DictionaryEntry entries = 1;
}

message LeaderInfo {
  repeated string id_list = 1;
  int32 last_assigned = 2;
  int32 nameNode_first_heartbeat = 3;
  string dictionary = 4; // Dictionary dictionary = 4;
}