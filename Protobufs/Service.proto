syntax = "proto3";

service ClientService {
    rpc ListFiles(Empty) returns (FileList) {}
    rpc CreateFile(FileData) returns (Status) {}
    rpc Open(FilePath) returns (Status) {}
    rpc Close(FilePath) returns (Status) {}
    rpc Read(FilePath) returns (FileData) {}
    rpc Write(FileData) returns (Status) {}
    rpc FilePartition(FilePath) returns (PartitionedFile) {}
    rpc JoinPartitionedFiles(PartitionedFile) returns (FileData) {}
  }
  
  service NameNodeService {
    rpc Create(FilePath) returns (Status) {}
    rpc AllocateBlocks(FileData) returns (BlockAllocation) {}
    rpc Append(FileData) returns (Status) {}
    rpc GetBlockLocations(FilePath) returns (BlockLocations) {}
    rpc RegisterDataNode(DataNodeInfo) returns (Status) {}
    rpc DataNodeHeartbeat(DataNodeStatus) returns (Status) {}
    rpc RelocateBlocks(BlockRelocation) returns (Status) {}
  }
  
  service DataNodeService {
    rpc SendHeartbeat(Empty) returns (Status) {}
    rpc StoreBlock(BlockData) returns (Status) {}
    rpc DeleteBlock(BlockId) returns (Status) {}
    rpc SendBlock(BlockId) returns (BlockData) {}
    rpc CleanStart(Empty) returns (Status) {}
    rpc ChangeOfLeader(LeaderInfo) returns (Status) {}
  }

message Empty {}

message FileList {
  repeated string files = 1;
}

message FilePath {
  string path = 1;
}

message FileData {
  string name = 1;
  bytes data = 2;
}

message PartitionedFile {
  string name = 1;
  repeated bytes partitions = 2;
}

message Status {
  bool success = 1;
  string message = 2;
}

message BlockAllocation {
  string name = 1;
  repeated string blockIds = 2;
}

message BlockLocations {
  string name = 1;
  map<string, string> locations = 2;  // Map from block ID to DataNode ID
}

message DataNodeInfo {
  string id = 1;
  string address = 2;
}

message DataNodeStatus {
  string id = 1;
  bool isAlive = 2;
}

message BlockRelocation {
  string blockId = 1;
  string sourceDataNodeId = 2;
  string targetDataNodeId = 3;
}

message BlockId {
  string id = 1;
}

message BlockData {
  string id = 1;
  bytes data = 2;
}

message LeaderInfo {
  string id = 1;
  string address = 2;
}